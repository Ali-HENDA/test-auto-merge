name: Dependabot Auto-merge (Minor/Patch Only)

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

permissions:
  contents: write
  pull-requests: write

jobs:
  automerge:
    if: github.event.pull_request.user.login == 'dependabot[bot]
    runs-on: ubuntu-latest
    steps:
      - name: Extract versions and determine update type
        id: version_check
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          VERSION_MATCH=$(echo "$PR_TITLE" | grep -oP 'from \S*(\d+(\.\d+)+)\S* to \S*(\d+(\.\d+)+)\S*')
          
          if [ -z "$VERSION_MATCH" ]; then
            echo "is_major=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          
          OLD_VERSION=$(echo "$VERSION_MATCH" | awk '{print $1}' | grep -oP '\d+(\.\d+)+')
          NEW_VERSION=$(echo "$VERSION_MATCH" | awk '{print $3}' | grep -oP '\d+(\.\d+)+')

          OLD_MAJOR=$(echo "$OLD_VERSION" | cut -d'.' -f1)
          NEW_MAJOR=$(echo "$NEW_VERSION" | cut -d'.' -f1)

          if [ "$OLD_MAJOR" == "$NEW_MAJOR" ]; then
            echo "is_major=false" >> "$GITHUB_OUTPUT"
          else
            echo "is_major=true" >> "$GITHUB_OUTPUT"
          fi
          
      - name: Approve and enable auto-merge for minor/patch updates
        if: steps.version_check.outputs.is_major == 'false'
        run: |
          gh pr review --approve ${{ github.event.pull_request.number }}
          gh pr merge --auto --merge ${{ github.event.pull_request.number }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify on major update
        if: steps.version_check.outputs.is_major == 'true'
        run: echo "Skipping auto-merge major version update detected."